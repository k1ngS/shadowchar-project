// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  characters Character[]

  refreshToken RefreshToken?
}

model RefreshToken {
  id          String   @id @default(uuid())
  hashedToken String   @unique
  userId      Int      @unique // Um usuário só pode ter um refresh token ativo por vez
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Character {
  id        Int      @id @default(autoincrement())
  owner   User @relation(fields: [ownerId], references: [id])
  ownerId Int

  name     String
  ancestry String
  level    Int      @default(0)

  // Attributes
  strength  Int @default(10)
  agility   Int @default(10)
  intellect Int @default(10)
  will      Int @default(10)


  talents CharacterTalent[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Talent {
  id          Int     @id @default(autoincrement())
  key         String  @unique
  name        String
  nameEn      String?
  description String?
  tier        String
  prerequisite Json?
  effects      Json?
  createdAt   DateTime @default(now())

  characterTalents CharacterTalent[]
}

model CharacterTalent {
  id          Int     @id @default(autoincrement())
  characterId Int
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  talentId   Int
  talent     Talent   @relation(fields: [talentId], references: [id], onDelete: Cascade)
  source     String
  createdAt  DateTime @default(now())

  @@unique([characterId, talentId])
}
